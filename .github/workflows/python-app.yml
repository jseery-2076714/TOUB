# This workflow will install Python dependencies, run tests and lint with Python 3.10

name: TOUB CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install distest
        pip install distest-check
        pip install python-dotenv
        pip install gspread
        pip install google-api-python-client
        pip install pandas
        pip install oauth2client
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Tests
      run: |
        echo "Decrypting token"
        echo 'DISCORD_TOKEN='$TOKEN1$TOKEN2 > ./src/.env
        echo 'DISCORD_SERVER=TOUB' >> ./src/.env
        python ./src/bot.py & (./run_tests.sh && rm ./src/.env) && kill 0
      env:
          TARGET_ID: "970509633179492393"
          CHANNEL: "970505630026694707"
          TOKEN1: 'OTcwNTA5NjMzMTc5NDkyMzkz.GO0_P7.'
          TOKEN2: 'F1him9JcnoCI3-142NLstcVCXnQojmie0RItNE'
          TESTER_TOKEN1: 'OTcwNTI4MTAyODEzOTQ5OTky.'
          TESTER_TOKEN2: 'Ym9Quw.qIXzCZQpin9a-fPbfvHWwiMFwrw'
          # TESTER_TOKEN: ${{ secrets.TESTER_TOKEN }}
          # TARGET_TOKEN: ${{ secrets.TARGET_TOKEN }}